Neuter security level things for LibreSSL < 3.6.0

diff --git a/Modules/_ssl.c b/Modules/_ssl.c
index d11ec05..4cb9479 100644
--- a/Modules/_ssl.c
+++ b/Modules/_ssl.c
@@ -171,7 +171,15 @@ extern const SSL_METHOD *TLSv1_2_method(void);
  * Based on Hynek's excellent blog post (update 2021-02-11)
  * https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  */
-  #define PY_SSL_DEFAULT_CIPHER_STRING "@SECLEVEL=2:ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES:DHE+AES:!aNULL:!eNULL:!aDSS:!SHA1:!AESCCM"
+
+  // libssl can only parse @SECLEVEL annotations with LibreSSL 3.6.0 and later.
+  #if defined(LIBRESSL_VERSION_NUMBER) && \
+             (LIBRESSL_VERSION_NUMBER >= 0x03060000f)
+    #define PY_SSL_DEFAULT_CIPHER_STRING "@SECLEVEL=2:ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES:DHE+AES:!aNULL:!eNULL:!aDSS:!SHA1:!AESCCM"
+  #else
+    #define PY_SSL_DEFAULT_CIPHER_STRING "ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES:DHE+AES:!aNULL:!eNULL:!aDSS:!SHA1:!AESCCM"
+  #endif
+
   #ifndef PY_SSL_MIN_PROTOCOL
     #define PY_SSL_MIN_PROTOCOL TLS1_2_VERSION
   #endif
@@ -3584,6 +3592,16 @@ PyDoc_STRVAR(PySSLContext_num_tickets_doc,
 "Control the number of TLSv1.3 session tickets");
 #endif /* TLS1_3_VERSION */
 
+// Fall back to security level 1 for LibreSSL < 3.6.0
+#if defined(LIBRESSL_VERSION_NUMBER) && \
+           (LIBRESSL_VERSION_NUMBER < 0x03060000f)
+static int
+SSL_CTX_get_security_level(const SSL_CTX *ctx)
+{
+    return 1;
+}
+#endif
+
 static PyObject *
 get_security_level(PySSLContext *self, void *c)
 {
